{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { PlusIcon } from \"../assets/svg/svg\";\nimport { useFonts } from \"expo-font\";\nimport * as Font from \"expo-font\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var PostScreen = function PostScreen() {\n  var _useFonts = useFonts({\n      \"Roboto-Bold\": require(\"../assets/fonts/Roboto-Bold.ttf\"),\n      \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\"),\n      \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : null,\n    keyboardVerticalOffset: -300,\n    style: styles.container,\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.header,\n          children: _jsx(Text, {\n            style: styles.headerText,\n            children: \"\\u041F\\u0443\\u0431\\u043B\\u0456\\u043A\\u0430\\u0446\\u0456\\u0457\"\n          })\n        }), _jsx(View, {\n          style: styles.mainContent\n        }), _jsxs(View, {\n          style: styles.footer,\n          children: [_jsx(View, {\n            style: styles.footerIcon,\n            children: _jsx(PlusIcon, {\n              width: 24,\n              height: 24\n            })\n          }), _jsx(View, {\n            style: styles.footerIcon\n          }), _jsx(View, {\n            style: styles.footerIcon\n          })]\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    paddingTop: 24,\n    borderRadius: 25,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    backgroundColor: \"#fff\",\n    fontFamily: 'Roboto-Regular'\n  },\n  header: {\n    height: 60,\n    paddingHorizontal: 16,\n    justifyContent: \"center\",\n    borderBottomWidth: 1,\n    width: \"100%\",\n    borderBottomColor: \"#ccc\"\n  },\n  headerText: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontFamily: 'Roboto-Medium'\n  },\n  mainContent: {\n    flex: 1\n  },\n  footer: {\n    flexDirection: \"row\",\n    height: 60,\n    borderTopWidth: 1,\n    borderTopColor: \"#ccc\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  footerIcon: {\n    backgroundColor: \"orange\"\n  }\n});\nFont.loadAsync({\n  \"Roboto-Bold\": require(\"../assets/fonts/Roboto-Bold.ttf\"),\n  \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\")\n});","map":{"version":3,"names":["React","useState","PlusIcon","useFonts","Font","View","Text","TouchableOpacity","KeyboardAvoidingView","TouchableWithoutFeedback","Image","StyleSheet","Platform","Keyboard","jsx","_jsx","jsxs","_jsxs","PostScreen","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","behavior","OS","keyboardVerticalOffset","style","styles","container","children","onPress","dismiss","header","headerText","mainContent","footer","footerIcon","width","height","create","flex","alignItems","justifyContent","paddingTop","borderRadius","borderBottomLeftRadius","borderBottomRightRadius","backgroundColor","fontFamily","paddingHorizontal","borderBottomWidth","borderBottomColor","fontSize","fontWeight","textAlign","flexDirection","borderTopWidth","borderTopColor","loadAsync"],"sources":["/Users/macbookpro/Desktop/Goit/goit-reactNative-project/src/screens/PostsScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { PlusIcon } from \"../assets/svg/svg\";\nimport { useFonts } from \"expo-font\";\nimport * as Font from \"expo-font\";\n\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  Image,\n  StyleSheet,\n  Platform,\n  Keyboard,\n} from \"react-native\";\n\nexport const PostScreen = () => {\n\n//   const [isKeyboardOpen, setIsKeyboardOpen] = useState(false);\n\n   const [fontsLoaded] = useFonts({\n    \"Roboto-Bold\": require(\"../assets/fonts/Roboto-Bold.ttf\"),\n    \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\"),\n    \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Medium.ttf\"),\n  });\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : null}\n          keyboardVerticalOffset={-300} \n      style={styles.container}\n    >\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n\n      <View style={styles.container}>\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={styles.headerText}>Публікації</Text>\n      </View>\n\n      {/* Main Content */}\n      <View style={styles.mainContent}>\n        {/* Список користувачів */}\n        {/* Додатковий вміст */}\n      </View>\n\n      {/* Footer */}\n      <View style={styles.footer}>\n        <View style={styles.footerIcon}>\n          <PlusIcon width={24} height={24} />\n        </View>\n        <View style={styles.footerIcon}>\n          {/* <UserIcon width={24} height={24} /> */}\n        </View>\n        <View style={styles.footerIcon}>\n          {/* <SettingsIcon width={24} height={24} /> */}\n        </View>\n      </View>\n    </View>\n\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n};\n\n// const styles = StyleSheet.create({\n//   container: {\n//       flex: 1,\n//     width: \"100%\",\n//     height: \"100%\",\n//     alignItems: \"center\",\n//     justifyContent: \"space-around\",\n//     padding: 24,\n//     borderRadius: 25,\n//     borderBottomLeftRadius: 0,\n//     borderBottomRightRadius: 0,\n//     backgroundColor: \"#fff\",\n//     position: \"absolute\",\n//     bottom: 0,\n//     left: 0,\n//         right: 0,\n//     fontFamily: 'Roboto-Regular',\n//   },\n//   innerContainer: {\n//     flex: 1,\n//     width: \"100%\",\n//     height: \"100%\",\n//     alignItems: \"center\",\n//   }\n\n//   loginText: {\n//     fontWeight: \"bold\",\n//     marginBottom: 32,\n//     marginTop:32,\n//     fontFamily: \"Roboto-Bold\",\n//     fontSize: 36,\n//   },\n//   input: {\n//     width: \"100%\",\n//     height: 50,\n//     borderWidth: 1,\n//     borderColor: \"#ccc\",\n//     borderRadius: 8,\n//     paddingHorizontal: 10,\n//     marginBottom: 16,\n//     fontSize: 16,\n//     },\n//     inputWraper: {\n//       width: \"100%\",\n// position: 'relative',\n//   },\n//   inputFocused: {\n//     borderColor: \"#FF6C00\",\n//   },\n\n//   link: {\n//     color: \"#1B4371\",\n//     textDecorationLine: \"none\",\n//     fontSize: 16,\n//   },\n\n//   showPasswordButton: {\n//     position: \"absolute\",\n//     top: 18,\n//     right: 16,\n//   },\n//   showPasswordButtonText: {\n//     color: \"#1B4371\",\n//     fontSize: 16,\n//   },\n//   button: {\n//     flexDirection: \"column\",\n//     alignItems: \"center\",\n//     padding: 16,\n//     paddingHorizontal: 32,\n//     marginBottom: 16,\n//     marginTop: 27,\n//     //   flex: 1,\n//     width: \"100%\",\n//     alignSelf: \"stretch\",\n//     backgroundColor: \"#FF6C00\",\n//     borderRadius: 100,\n//   },\n//   buttonText: {\n//     color: \"#fff\",\n//     fontWeight: \"regular\",\n//     fontSize: 16,\n//   },\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n      width: \"100%\",\n      height: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",\n      paddingTop: 24,\n      borderRadius: 25,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n      backgroundColor: \"#fff\",\n      fontFamily: 'Roboto-Regular',\n\n    },\n    header: {\n      height: 60,\n      paddingHorizontal: 16,\n      justifyContent: \"center\",\n      borderBottomWidth: 1,\n     width: \"100%\",\n      borderBottomColor: \"#ccc\",\n    },\n    headerText: {\n      fontSize: 17,\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n      fontFamily: 'Roboto-Medium'\n    },\n    mainContent: {\n      flex: 1,\n    \n    },\n    footer: {\n      flexDirection: \"row\",\n      height: 60,\n      borderTopWidth: 1,\n      borderTopColor: \"#ccc\",\n      justifyContent: \"space-around\",\n      alignItems: \"center\",\n    },\n    footerIcon: {\n      backgroundColor: \"orange\"\n    },\n  });\n  \n  \n  \n\n\nFont.loadAsync({\n  \"Roboto-Bold\": require(\"../assets/fonts/Roboto-Bold.ttf\"),\n  \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\"),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}