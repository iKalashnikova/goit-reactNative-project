{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { useFonts } from \"expo-font\";\nimport * as Font from \"expo-font\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var LoginScreen = function LoginScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showPassword = _useState2[0],\n    setShowPassword = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isKeyboardOpen = _useState4[0],\n    setIsKeyboardOpen = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    emailFocused = _useState6[0],\n    setEmailFocused = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    passwordFocused = _useState8[0],\n    setPasswordFocused = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    emailValue = _useState10[0],\n    setEmailValue = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    passwordValue = _useState12[0],\n    setPasswordValue = _useState12[1];\n  var screenHeight = Dimensions.get(\"window\").height;\n  var _useFonts = useFonts({\n      \"Roboto-Bold\": require(\"../assets/fonts/Roboto-Bold.ttf\"),\n      \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var handleLogin = function handleLogin() {\n    console.log(\"Електронна пошта:\", emailValue);\n    console.log(\"Пароль:\", passwordValue);\n    setEmailValue(\"\");\n    setPasswordValue(\"\");\n  };\n  var keyboardDidShow = function keyboardDidShow() {\n    setIsKeyboardOpen(true);\n  };\n  var keyboardDidHide = function keyboardDidHide() {\n    setIsKeyboardOpen(false);\n  };\n  Keyboard.addListener(\"keyboardDidShow\", keyboardDidShow);\n  Keyboard.addListener(\"keyboardDidHide\", keyboardDidHide);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : null,\n    keyboardVerticalOffset: -300,\n    style: styles.container,\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsxs(View, {\n        style: [styles.innerContainer, {\n          height: screenHeight * 3 / 5\n        }],\n        children: [_jsx(Text, {\n          style: styles.loginText,\n          children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n        }), _jsxs(View, {\n          style: styles.form,\n          children: [_jsx(TextInput, {\n            style: [styles.input, emailFocused && styles.inputFocused],\n            placeholder: \"\\u0415\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430 \\u043F\\u043E\\u0448\\u0442\\u0430\",\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            autoCompleteType: \"email\",\n            value: emailValue,\n            onChangeText: setEmailValue,\n            autoFocus: true,\n            onFocus: function onFocus() {\n              return setEmailFocused(true);\n            },\n            onBlur: function onBlur() {\n              return setEmailFocused(false);\n            }\n          }), _jsxs(View, {\n            style: styles.inputWraper,\n            children: [_jsx(TextInput, {\n              style: [styles.input, passwordFocused && styles.inputFocused],\n              placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n              value: passwordValue,\n              onChangeText: setPasswordValue,\n              secureTextEntry: !showPassword,\n              onFocus: function onFocus() {\n                return setPasswordFocused(true);\n              },\n              onBlur: function onBlur() {\n                return setPasswordFocused(false);\n              }\n            }), _jsx(TouchableOpacity, {\n              style: styles.showPasswordButton,\n              onPress: function onPress() {\n                return setShowPassword(!showPassword);\n              },\n              children: _jsx(Text, {\n                style: styles.showPasswordButtonText,\n                children: showPassword ? \"Сховати\" : \"Показати\"\n              })\n            }), !isKeyboardOpen && _jsxs(_Fragment, {\n              children: [_jsx(TouchableOpacity, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: handleLogin,\n                children: _jsx(Text, {\n                  style: styles.link,\n                  children: \"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442\\u0443? \\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\"\n                })\n              })]\n            })]\n          })]\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    padding: 24,\n    borderRadius: 25,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    backgroundColor: \"#fff\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    fontFamily: \"Roboto-Regular\"\n  },\n  innerContainer: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  loginText: {\n    fontWeight: \"bold\",\n    marginBottom: 32,\n    marginTop: 32,\n    fontFamily: \"Roboto-Bold\",\n    fontSize: 36\n  },\n  input: {\n    width: \"100%\",\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    marginBottom: 16,\n    fontSize: 16\n  },\n  inputWraper: {\n    width: \"100%\",\n    position: \"relative\"\n  },\n  inputFocused: {\n    borderColor: \"#FF6C00\"\n  },\n  form: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  link: {\n    color: \"#1B4371\",\n    textDecorationLine: \"none\",\n    fontSize: 16\n  },\n  showPasswordButton: {\n    position: \"absolute\",\n    top: 18,\n    right: 16\n  },\n  showPasswordButtonText: {\n    color: \"#1B4371\",\n    fontSize: 16\n  },\n  button: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: 16,\n    paddingHorizontal: 32,\n    marginBottom: 16,\n    marginTop: 27,\n    width: \"100%\",\n    alignSelf: \"stretch\",\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 100\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontWeight: \"regular\",\n    fontSize: 16\n  }\n});\nFont.loadAsync({\n  \"Roboto-Bold\": require(\"../assets/fonts/Roboto-Bold.ttf\"),\n  \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\")\n});","map":{"version":3,"names":["React","useState","useFonts","Font","View","TextInput","Text","TouchableOpacity","KeyboardAvoidingView","TouchableWithoutFeedback","Image","StyleSheet","Platform","Keyboard","Dimensions","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","isKeyboardOpen","setIsKeyboardOpen","_useState5","_useState6","emailFocused","setEmailFocused","_useState7","_useState8","passwordFocused","setPasswordFocused","_useState9","_useState10","emailValue","setEmailValue","_useState11","_useState12","passwordValue","setPasswordValue","screenHeight","get","height","_useFonts","require","_useFonts2","fontsLoaded","handleLogin","console","log","keyboardDidShow","keyboardDidHide","addListener","behavior","OS","keyboardVerticalOffset","style","styles","container","children","onPress","dismiss","innerContainer","loginText","form","input","inputFocused","placeholder","keyboardType","autoCapitalize","autoCompleteType","value","onChangeText","autoFocus","onFocus","onBlur","inputWraper","secureTextEntry","showPasswordButton","showPasswordButtonText","button","buttonText","link","create","width","alignItems","justifyContent","padding","borderRadius","borderBottomLeftRadius","borderBottomRightRadius","backgroundColor","position","bottom","left","right","fontFamily","fontWeight","marginBottom","marginTop","fontSize","borderWidth","borderColor","paddingHorizontal","color","textDecorationLine","top","flexDirection","alignSelf","loadAsync"],"sources":["/Users/macbookpro/Desktop/Goit/goit-reactNative-project/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useFonts } from \"expo-font\";\nimport * as Font from \"expo-font\";\n\nimport {\n  View,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  Image,\n  StyleSheet,\n  Platform,\n  Keyboard,\n  Dimensions,\n} from \"react-native\";\n\nexport const LoginScreen = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isKeyboardOpen, setIsKeyboardOpen] = useState(false);\n  const [emailFocused, setEmailFocused] = useState(false);\n  const [passwordFocused, setPasswordFocused] = useState(false);\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n\n  const screenHeight = Dimensions.get(\"window\").height;\n\n  const [fontsLoaded] = useFonts({\n    \"Roboto-Bold\": require(\"../assets/fonts/Roboto-Bold.ttf\"),\n    \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\"),\n  });\n\n  const handleLogin = () => {\n    console.log(\"Електронна пошта:\", emailValue);\n    console.log(\"Пароль:\", passwordValue);\n\n    setEmailValue(\"\");\n    setPasswordValue(\"\");\n  };\n\n  const keyboardDidShow = () => {\n    setIsKeyboardOpen(true);\n  };\n\n  const keyboardDidHide = () => {\n    setIsKeyboardOpen(false);\n  };\n\n  Keyboard.addListener(\"keyboardDidShow\", keyboardDidShow);\n  Keyboard.addListener(\"keyboardDidHide\", keyboardDidHide);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : null}\n      keyboardVerticalOffset={-300}\n      style={styles.container}\n    >\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <View\n          style={[styles.innerContainer, { height: (screenHeight * 3) / 5 }]}\n        >\n          <Text style={styles.loginText}>Увійти</Text>\n          <View style={styles.form}>\n            <TextInput\n              style={[styles.input, emailFocused && styles.inputFocused]}\n              placeholder=\"Електронна пошта\"\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoCompleteType=\"email\"\n              value={emailValue}\n              onChangeText={setEmailValue}\n              autoFocus={true}\n              onFocus={() => setEmailFocused(true)}\n              onBlur={() => setEmailFocused(false)}\n            />\n            <View style={styles.inputWraper}>\n              <TextInput\n                style={[styles.input, passwordFocused && styles.inputFocused]}\n                placeholder=\"Пароль\"\n                value={passwordValue}\n                onChangeText={setPasswordValue}\n                secureTextEntry={!showPassword}\n                onFocus={() => setPasswordFocused(true)}\n                onBlur={() => setPasswordFocused(false)}\n              />\n              <TouchableOpacity\n                style={styles.showPasswordButton}\n                onPress={() => setShowPassword(!showPassword)}\n              >\n                <Text style={styles.showPasswordButtonText}>\n                  {showPassword ? \"Сховати\" : \"Показати\"}\n                </Text>\n              </TouchableOpacity>\n\n              {!isKeyboardOpen && (\n                <>\n                  <TouchableOpacity style={styles.button}>\n                    <Text style={styles.buttonText}>Увійти</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity onPress={handleLogin}>\n                    <Text style={styles.link}>\n                      Немає акаунту? Зареєструватися\n                    </Text>\n                  </TouchableOpacity>\n                </>\n              )}\n            </View>\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    //   flex: 1,\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    padding: 24,\n    borderRadius: 25,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    backgroundColor: \"#fff\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    fontFamily: \"Roboto-Regular\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n\n  loginText: {\n    fontWeight: \"bold\",\n    marginBottom: 32,\n    marginTop: 32,\n    fontFamily: \"Roboto-Bold\",\n    fontSize: 36,\n  },\n  input: {\n    width: \"100%\",\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    marginBottom: 16,\n    fontSize: 16,\n  },\n  inputWraper: {\n    width: \"100%\",\n    position: \"relative\",\n  },\n  inputFocused: {\n    borderColor: \"#FF6C00\",\n  },\n  form: {\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n  link: {\n    color: \"#1B4371\",\n    textDecorationLine: \"none\",\n    fontSize: 16,\n  },\n\n  showPasswordButton: {\n    position: \"absolute\",\n    top: 18,\n    right: 16,\n  },\n  showPasswordButtonText: {\n    color: \"#1B4371\",\n    fontSize: 16,\n  },\n  button: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: 16,\n    paddingHorizontal: 32,\n    marginBottom: 16,\n    marginTop: 27,\n    //   flex: 1,\n    width: \"100%\",\n    alignSelf: \"stretch\",\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 100,\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontWeight: \"regular\",\n    fontSize: 16,\n  },\n});\n\nFont.loadAsync({\n  \"Roboto-Bold\": require(\"../assets/fonts/Roboto-Bold.ttf\"),\n  \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\"),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}